<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.myBlog.mapper.MyCommentExtMapper">
	<resultMap id="BaseResultMap"
		type="com.example.myBlog.entity.MyComment">
		<!-- WARNING - @mbg.generated This element is automatically generated by 
			MyBatis Generator, do not modify. This element was generated on Fri Sep 20 
			21:04:05 CST 2019. -->
		<id column="id" jdbcType="INTEGER" property="id" />
		<result column="parent_id" jdbcType="INTEGER"
			property="parentId" />
		<result column="parent_type" jdbcType="INTEGER"
			property="parentType" />
		<result column="commentator" jdbcType="INTEGER"
			property="commentator" />
		<result column="gmt_create" jdbcType="BIGINT"
			property="gmtCreate" />
		<result column="gmt_modified" jdbcType="BIGINT"
			property="gmtModified" />
		<result column="like_count" jdbcType="INTEGER"
			property="likeCount" />
		<result column="comment_count" jdbcType="INTEGER"
			property="commentCount" />
		<result column="content" jdbcType="VARCHAR" property="content" />
	</resultMap>
	<sql id="Example_Where_Clause">
		<!-- WARNING - @mbg.generated This element is automatically generated by 
			MyBatis Generator, do not modify. This element was generated on Sat Sep 28 
			20:27:45 CST 2019. -->
		<where>
			<foreach collection="oredCriteria" item="criteria"
				separator="or">
				<if test="criteria.valid">
					<trim prefix="(" prefixOverrides="and" suffix=")">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value} and
									#{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach close=")" collection="criterion.value"
										item="listItem" open="(" separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<sql id="Update_By_Example_Where_Clause">
		<!-- WARNING - @mbg.generated This element is automatically generated by 
			MyBatis Generator, do not modify. This element was generated on Sat Sep 28 
			20:27:45 CST 2019. -->
		<where>
			<foreach collection="example.oredCriteria" item="criteria"
				separator="or">
				<if test="criteria.valid">
					<trim prefix="(" prefixOverrides="and" suffix=")">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value} and
									#{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach close=")" collection="criterion.value"
										item="listItem" open="(" separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<sql id="Base_Column_List">
		<!-- WARNING - @mbg.generated This element is automatically generated by 
			MyBatis Generator, do not modify. This element was generated on Sat Sep 28 
			20:27:45 CST 2019. -->
		id, parent_id, parent_type, commentator, gmt_create, gmt_modified,
		like_count, comment_count,
		content
	</sql>
	<update id="updateAddCommentCount"
		parameterType="com.example.myBlog.entity.MyComment">
		update comment
		set comment_count =
		comment_count+#{commentCount,jdbcType=INTEGER}
		where ID =
		#{id,jdbcType=INTEGER}
	</update>
	<update id="updateDownCommentCount"
		parameterType="com.example.myBlog.entity.MyComment">
		update comment
		set comment_count =
		comment_count-#{commentCount,jdbcType=INTEGER}
		where ID =
		#{id,jdbcType=INTEGER}
	</update>
	<update id="updateAddLikeCount"
		parameterType="com.example.myBlog.entity.MyComment">
		update comment
		set like_count =
		like_count+#{likeCount,jdbcType=INTEGER}
		where ID =
		#{id,jdbcType=INTEGER}
	</update>
</mapper>