<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.myBlog.mapper.MyQuestionExtMapper">
  <resultMap id="BaseResultMap" type="com.example.myBlog.entity.MyQuestion">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Wed Sep 11 10:50:17 CST 2019.
    -->
    <id column="ID" jdbcType="DECIMAL" property="id" />
    <result column="TITLE" jdbcType="VARCHAR" property="title" />
    <result column="DESCRIPTION" jdbcType="VARCHAR" property="description" />
    <result column="GMT_CREATE" jdbcType="DECIMAL" property="gmtCreate" />
    <result column="GMT_MODIFIED" jdbcType="DECIMAL" property="gmtModified" />
    <result column="CREATOR" jdbcType="DECIMAL" property="creator" />
    <result column="VIEW_COUNT" jdbcType="DECIMAL" property="viewCount" />
    <result column="COMMENT_COUNT" jdbcType="DECIMAL" property="commentCount" />
    <result column="LIKE_COUNT" jdbcType="DECIMAL" property="likeCount" />
    <result column="TAG" jdbcType="VARCHAR" property="tag" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Sep 26 21:28:26 CST 2019.
    -->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Sep 26 21:28:26 CST 2019.
    -->
    ID, TITLE, DESCRIPTION, GMT_CREATE, GMT_MODIFIED, CREATOR, VIEW_COUNT, COMMENT_COUNT, 
    LIKE_COUNT, TAG
  </sql>
  <update id="updateViewCount" parameterType="com.example.myBlog.entity.MyQuestion">
    update USER_QUESTION
    set VIEW_COUNT = VIEW_COUNT+#{viewCount,jdbcType=DECIMAL}
    where  ID = #{id,jdbcType=DECIMAL}
  </update>
  <update id="updateAddCommentCount" parameterType="com.example.myBlog.entity.MyQuestion">
    update USER_QUESTION
    set COMMENT_COUNT = COMMENT_COUNT+#{commentCount,jdbcType=DECIMAL}
    where  ID = #{id,jdbcType=DECIMAL}
  </update>
  <update id="updateDownCommentCount" parameterType="com.example.myBlog.entity.MyQuestion">
    update USER_QUESTION
    set COMMENT_COUNT = COMMENT_COUNT-#{commentCount,jdbcType=DECIMAL}
    where  ID = #{id,jdbcType=DECIMAL}
  </update>
  <select id="selectQuestionByTag" parameterType="com.example.myBlog.entity.MyQuestion" resultMap="BaseResultMap">
    select * from USER_QUESTION WHERE REGEXP_LIKE(tag,#{tag}) AND ID != #{id}
  </select>
  <select id="selectQuestionBySearch" parameterType="com.example.myBlog.dto.QuestionQueryDTO" resultType="java.lang.Integer">
    select count(*) from USER_QUESTION 
    <where>
    	<if test="search != null">
    		REGEXP_LIKE(title,#{search})
    	</if>
    </where>
  </select>
  <select id="selectBySearch" parameterType="com.example.myBlog.dto.QuestionQueryDTO" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from USER_QUESTION
    <where>
    	<if test="search != null">
    		REGEXP_LIKE(title,#{search})
    	</if>
    </where>
      order by gmt_Create desc
  </select>
  <insert id="insert" parameterType="com.example.myBlog.entity.MyQuestion">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Fri Sep 13 21:00:45 CST 2019.
    -->
    insert into USER_QUESTION (ID, TITLE, DESCRIPTION, 
      GMT_CREATE, GMT_MODIFIED, CREATOR, 
      VIEW_COUNT, COMMENT_COUNT, LIKE_COUNT, 
      TAG)
    values (myQuestion_Id_Seq.Nextval, #{title,jdbcType=VARCHAR}, #{description,jdbcType=VARCHAR}, 
      #{gmtCreate,jdbcType=DECIMAL}, #{gmtModified,jdbcType=DECIMAL}, #{creator,jdbcType=DECIMAL}, 
      #{viewCount,jdbcType=DECIMAL}, #{commentCount,jdbcType=DECIMAL}, #{likeCount,jdbcType=DECIMAL}, 
      #{tag,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.example.myBlog.entity.MyQuestion">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Fri Sep 13 21:00:45 CST 2019.
    -->
    insert into USER_QUESTION
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != 0">
        ID,
      </if>
      <if test="title != null">
        TITLE,
      </if>
      <if test="description != null">
        DESCRIPTION,
      </if>
      <if test="gmtCreate != null">
        GMT_CREATE,
      </if>
      <if test="gmtModified != null">
        GMT_MODIFIED,
      </if>
      <if test="creator != null">
        CREATOR,
      </if>
      <if test="viewCount != null">
        VIEW_COUNT,
      </if>
      <if test="commentCount != null">
        COMMENT_COUNT,
      </if>
      <if test="likeCount != null">
        LIKE_COUNT,
      </if>
      <if test="tag != null">
        TAG,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != 0">
        myQuestion_Id_Seq.Nextval,
      </if>
      <if test="title != null">
        #{title,jdbcType=VARCHAR},
      </if>
      <if test="description != null">
        #{description,jdbcType=VARCHAR},
      </if>
      <if test="gmtCreate != null">
        #{gmtCreate,jdbcType=DECIMAL},
      </if>
      <if test="gmtModified != null">
        #{gmtModified,jdbcType=DECIMAL},
      </if>
      <if test="creator != null">
        #{creator,jdbcType=DECIMAL},
      </if>
      <if test="viewCount != null">
        #{viewCount,jdbcType=DECIMAL},
      </if>
      <if test="commentCount != null">
        #{commentCount,jdbcType=DECIMAL},
      </if>
      <if test="likeCount != null">
        #{likeCount,jdbcType=DECIMAL},
      </if>
      <if test="tag != null">
        #{tag,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
</mapper>